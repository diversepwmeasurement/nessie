jobs:
  create-release:
    env:
      BUMP_TYPE: ${{ github.event.inputs.bumpType }}
      RELEASE_FROM: ${{ github.event.inputs.releaseFromBranch }}
    if: github.repository == 'projectnessie/nessie'
    name: Create release
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout
      uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633
      with:
        fetch-depth: '0'
        ref: ${{ env.RELEASE_FROM }}
    - continue-on-error: true
      name: Setup Java, Gradle
      uses: ./.github/actions/dev-tool-java
    - continue-on-error: true
      name: Setup Go
      uses: actions/setup-go@v5
    - continue-on-error: true
      name: Bump to release version
      uses: gradle/actions/setup-gradle@v3
      with:
        arguments: :bumpVersion --bumpType ${{ env.BUMP_TYPE }} --bumpToRelease
        cache-disabled: true
    - continue-on-error: true
      name: Get release version
      run: "RELEASE_VERSION=$(cat version.txt)\nLAST_TAG=$(git describe --abbrev=0\
        \ --tags --match=nessie-*)\n\necho \"LAST_TAG=${LAST_TAG}\" >> ${GITHUB_ENV}\n\
        echo \"RELEASE_VERSION=${RELEASE_VERSION}\" >> ${GITHUB_ENV}\necho \"GIT_TAG=nessie-${RELEASE_VERSION}\"\
        \ >> ${GITHUB_ENV}\n\ncat <<! >> $GITHUB_STEP_SUMMARY\n## About to release\n\
        \nVersion information right before the Git release tag and commit:\n\n| Name\
        \ | Value |\n| --- | --- |\n| Nessie release version  | ${RELEASE_VERSION}\
        \            | \n| Git tag name            | \\`nessie-${RELEASE_VERSION}\\\
        ` | \n| Previous Git tag        | \\`${LAST_TAG}\\`               | \n| Release\
        \ from branch     | ${RELEASE_FROM}               | \n| Bump type        \
        \       | ${BUMP_TYPE}                  |\n| Before release Git HEAD | \\\
        `$(git rev-parse HEAD)\\`     |\n!\n"
    - continue-on-error: true
      name: Update .md files referencing latest Nessie version
      run: "LAST_VERSION=\"${LAST_TAG#nessie-}\"\nLAST_VERSION_PATTERN=\"$(echo ${LAST_VERSION}\
        \ | sed 's/\\([^.]*\\)[.]\\([^.]*\\)[.].*/\\1\\\\.\\2/')\\\\.\"\n\nfor fn\
        \ in SECURITY.md README.md site/docs/try/server-upgrade.md ; do\n  sed -i\
        \ \"s/${LAST_VERSION_PATTERN}[^ ]*/${RELEASE_VERSION}/\" ${fn}\ndone\n"
    - continue-on-error: true
      name: Check release version number in text files
      run: "FAILS=\"\"\n# version pattern without patch version\nVERSION_PATTERN=\"\
        $(echo ${RELEASE_VERSION} | sed 's/\\([^.]*\\)[.]\\([^.]*\\)[.].*/\\1\\\\\
        .\\2/')\\\\.\"\ngrep -q \" ${VERSION_PATTERN}\" < site/docs/try/server-upgrade.md\
        \ || FAILS=\"${FAILS} site/docs/try/server-upgrade.md\"\ngrep -q \"^| ${VERSION_PATTERN}\"\
        \ < README.md || FAILS=\"${FAILS} README.md\"\ngrep -q \"^| ${VERSION_PATTERN}.*\
        \ .*check_mark.*$\" < SECURITY.md || FAILS=\"${FAILS} SECURITY.md\"\nif [[\
        \ -n ${FAILS} ]] ; then\n  echo ${FAILS} \"do not match the version pattern\
        \ ${VERSION_PATTERN}.\"\n  exit 1\nfi\n"
    - continue-on-error: true
      name: Bump versions for site/ and helm
      uses: ./.github/actions/bump-versions
      with:
        bump-helm-version: 'true'
        bump-site-version: 'true'
        new-version: ${{ env.RELEASE_VERSION }}
    - continue-on-error: true
      name: Patch changelog
      uses: gradle/actions/setup-gradle@v3
      with:
        arguments: :patchChangelog
        cache-disabled: true
    - continue-on-error: true
      name: Update releases.md file
      run: "head -4 site/docs/try/releases.md > /tmp/releases.md\ncat <<!  >> /tmp/releases.md\n\
        ## ${RELEASE_VERSION} Release ($(date '+%B %d, %Y'))\n\nSee [Release information\
        \ on GitHub](https://github.com/projectnessie/nessie/releases/tag/nessie-${RELEASE_VERSION}).\n\
        \n!\n\n# Add section from CHANGELOG.md for the version to release\n./gradlew\
        \ --quiet --console=plain getChangelog --no-header --no-links >> /tmp/releases.md\n\
        echo \"### Commits\" >> /tmp/releases.md\n\ngit log --perl-regexp --author\
        \ '^(?!.*renovate|.*nessie-release-workflow).*$'\\\n  --format='format:* %s'\
        \ ${LAST_TAG}..HEAD . |\\\n  grep -v '^\\* \\[release\\] .*$' >> /tmp/releases.md\
        \ || true\n\ntail +4 site/docs/try/releases.md >> /tmp/releases.md\n\ncp /tmp/releases.md\
        \ site/docs/try/releases.md\nrm /tmp/releases.md\n"
    - continue-on-error: true
      name: Update helm/README.md
      run: 'go install github.com/norwoodj/helm-docs/cmd/helm-docs@latest

        $(go env GOPATH)/bin/helm-docs --chart-search-root=helm

        '
    - continue-on-error: true
      name: Configure release-bot-user in git config
      run: 'git config --global user.email "nessie-release-workflow-noreply@projectnessie.org"

        git config --global user.name "Nessie Release Workflow [bot]"

        '
    - continue-on-error: true
      name: Record ${{ env.RELEASE_VERSION }} release in git
      run: "git commit -a -m \"[release] release nessie-${RELEASE_VERSION}\"\ngit\
        \ tag -f -a -m \"Release ${RELEASE_VERSION} from ${RELEASE_FROM} with bump-type\
        \ ${BUMP_TYPE}\" ${GIT_TAG}\n\ncat <<! >> $GITHUB_STEP_SUMMARY\n## Release\
        \ version information\n\nVersion information after the Git release tag:\n\n\
        | Name | Value |\n| --- | --- |\n| Nessie release version | ${RELEASE_VERSION}\
        \        | \n| Git tag name           | \\`${GIT_TAG}\\`\\           | \n\
        | Previous Git tag       | \\`${LAST_TAG}\\`           | \n| Release from\
        \ branch    | ${RELEASE_FROM}           | \n| Bump type              | ${BUMP_TYPE}\
        \              |\n| Release Git HEAD       | \\`$(git rev-parse HEAD)\\` |\n\
        !\n"
    - continue-on-error: true
      name: Bump to next patch version
      uses: gradle/actions/setup-gradle@v3
      with:
        arguments: :bumpVersion --bumpType patch
    - continue-on-error: true
      name: Get next patch version
      run: 'NEXT_VERSION="$(cat version.txt)"

        echo "NEXT_VERSION=${NEXT_VERSION}" >> ${GITHUB_ENV}

        echo "NEXT_VERSION_NO_SNAPSHOT=${NEXT_VERSION%-SNAPSHOT}" >> ${GITHUB_ENV}

        '
    - continue-on-error: true
      name: Next version information
      run: 'cat <<! >> $GITHUB_STEP_SUMMARY

        ## Next development version information


        | Name | Value |

        | --- | --- |

        | Nessie development version | ${NEXT_VERSION}           |

        | \`version.txt\` content    | \`$(cat version.txt)\`    |

        | Git HEAD                   | \`$(git rev-parse HEAD)\` |

        !

        '
    - continue-on-error: true
      name: Bump versions for site/ and helm
      uses: ./.github/actions/bump-versions
      with:
        new-version: ${{ env.NEXT_VERSION_NO_SNAPSHOT }}
    - continue-on-error: true
      name: Record next development version in Git
      run: git commit -a -m "[release] next development iteration ${NEXT_VERSION}"
    - continue-on-error: true
      name: Push tag + branch
      run: '# Push directly using the remote repo URL, which includes the secret so
        this job can push to the repo

        UPSTREAM="https://${{ secrets.NESSIE_BUILDER }}@github.com/${GITHUB_REPOSITORY}.git"


        # Move the default auth settings in ~/.gitconfig out of the way, so the git-push
        can use the token

        git config --rename-section http.https://github.com/ http.https://save.github.com/


        git push --no-verify "${UPSTREAM}" HEAD:${GITHUB_REF} ${GIT_TAG}


        # Move the default auth settings in ~/.gitconfig back

        git config --rename-section http.https://save.github.com/ http.https://github.com/

        '
    timeout-minutes: 60
name: Create Release
on:
  repository_dispatch:
    types: trigger-ga___release-create.yml
