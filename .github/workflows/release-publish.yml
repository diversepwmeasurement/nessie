jobs:
  publish-release:
    environment: release
    if: github.repository == 'projectnessie/nessie'
    name: Publish release
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Get release version
      run: "if [[ \"${{ github.event_name }}\" == \"push\" ]] ; then\n  V=\"${GITHUB_REF/refs\\\
        /tags\\/}\"\nelse\n  V=\"${{ github.event.inputs.releaseTag }}\"\nfi\n# check\
        \ if tag matches patterns like nessie-0.5, nessie-0.10.4.3-alpha1, etc\nif\
        \ [[ ${V} =~ ^nessie-[0-9]+[.][0-9.]*[0-9](-[a-zA-Z0-9]+)?$ ]]; then\n  echo\
        \ \"RELEASE_VERSION=${V/nessie-}\" >> ${GITHUB_ENV}\n  echo \"GIT_TAG=${V}\"\
        \ >> ${GITHUB_ENV}\nelse\n  echo \"Tag must start with nessie- followed by\
        \ a valid version (got tag ${V}, ref is ${GITHUB_REF} )\"\n  exit 1\nfi\n"
    - continue-on-error: true
      if: ${{ github.event_name == 'push' }}
      name: Checkout
      uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633
      with:
        fetch-depth: '0'
    - continue-on-error: true
      if: ${{ github.event_name == 'workflow_dispatch' }}
      name: Checkout
      uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633
      with:
        fetch-depth: '0'
        ref: refs/tags/${{ github.event.inputs.releaseTag }}
    - continue-on-error: true
      name: Setup runner
      uses: ./.github/actions/setup-runner
    - continue-on-error: true
      name: Setup Java, Gradle
      uses: ./.github/actions/dev-tool-java
      with:
        gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
    - continue-on-error: true
      name: Install Helm
      uses: azure/setup-helm@v4
      with:
        version: v3.6.3
    - continue-on-error: true
      env:
        ARTIFACTS: ../build-artifacts
        MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}
        MAVEN_OSSRH_TOKEN: ${{ secrets.OSSRH_TOKEN }}
        MAVEN_USERNAME: ${{ secrets.OSSRH_ACCESS_ID }}
        ORG_GRADLE_PROJECT_signingKey: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
        ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.MAVEN_GPG_PASSPHRASE }}
        ORG_GRADLE_PROJECT_sonatypePassword: ${{ secrets.OSSRH_TOKEN }}
        ORG_GRADLE_PROJECT_sonatypeUsername: ${{ secrets.OSSRH_ACCESS_ID }}
      name: Publish Maven artifacts for release
      run: "rm -rf \"${ARTIFACTS}\"\nmkdir -p \"${ARTIFACTS}\"\n\necho \"::group::Gradle\
        \ build\"\n# 2 Retries - due to Gradle's old and unfixed CME bug\n./gradlew\
        \ compileAll jar testClasses || \\\n  ./gradlew compileAll jar testClasses\
        \ || \\\n  ./gradlew compileAll jar testClasses \necho \"::endgroup::\"\n\n\
        echo \"::group::Publish to Sonatype\"\n# 2 Retries - to mitigate \"HTTP/502\
        \ Bad Gateway\" issues\n./gradlew publishToMavenLocal publishToSonatype closeAndReleaseSonatypeStagingRepository\
        \ -Prelease -Puber-jar || \\\n  ./gradlew publishToMavenLocal publishToSonatype\
        \ closeAndReleaseSonatypeStagingRepository -Prelease -Puber-jar || \\\n  ./gradlew\
        \ publishToMavenLocal publishToSonatype closeAndReleaseSonatypeStagingRepository\
        \ -Prelease -Puber-jar\nmv servers/quarkus-server/build/nessie-quarkus-${RELEASE_VERSION}-runner.jar\
        \ \"${ARTIFACTS}\"\nmv servers/quarkus-cli/build/nessie-quarkus-cli-${RELEASE_VERSION}-runner.jar\
        \ \"${ARTIFACTS}\"\necho \"::endgroup::\"\n\necho '${{ secrets.GITHUB_TOKEN\
        \ }}' | docker login ghcr.io -u $ --password-stdin \ntools/dockerbuild/build-push-images.sh\
        \ \\\n  -a \"${ARTIFACTS}\" \\\n  -g \":nessie-quarkus\" \\\n  -p \"servers/quarkus-server\"\
        \ \\\n  -d \"Dockerfile-server\" \\\n  ghcr.io/projectnessie/nessie\n\ntools/dockerbuild/build-push-images.sh\
        \ \\\n  -a \"${ARTIFACTS}\" \\\n  -g \":nessie-gc-tool\" \\\n  -p \"gc/gc-tool\"\
        \ \\\n  -d \"Dockerfile-gctool\" \\\n  ghcr.io/projectnessie/nessie-gc\n\n\
        # Add version to the openapi file name\ncp api/model/build/generated/openapi/META-INF/openapi/openapi.yaml\
        \ api/model/build/nessie-openapi-${RELEASE_VERSION}.yaml\n# Add version to\
        \ nessie-gc executable (jar)\ncp gc/gc-tool/build/executable/nessie-gc.jar\
        \ gc/gc-tool/build/executable/nessie-gc-${RELEASE_VERSION}.jar\n\necho \"\
        QUARKUS_UBER_JAR=${ARTIFACTS}/nessie-quarkus-${RELEASE_VERSION}-runner.jar\"\
        \ >> ${GITHUB_ENV}\necho \"CLI_UBER_JAR=${ARTIFACTS}/nessie-quarkus-cli-${RELEASE_VERSION}-runner.jar\"\
        \ >> ${GITHUB_ENV}\necho \"GC_UBER_JAR=gc/gc-tool/build/executable/nessie-gc-${RELEASE_VERSION}.jar\"\
        \ >> ${GITHUB_ENV}\necho \"NESSIE_OPENAPI=api/model/build/nessie-openapi-${RELEASE_VERSION}.yaml\"\
        \ >> ${GITHUB_ENV}\n\necho \"## Successfully released ${RELEASE_VERSION} to\
        \ Sonatype\" >> $GITHUB_STEP_SUMMARY\n"
    - continue-on-error: true
      name: Package Nessie Helm chart for release
      run: 'helm package helm/nessie --version ${RELEASE_VERSION}

        '
    - continue-on-error: true
      name: Rename Nessie Helm chart for release
      run: 'mv nessie-${RELEASE_VERSION}.tgz nessie-helm-${RELEASE_VERSION}.tgz

        echo "NESSIE_HELM_CHART=nessie-helm-${RELEASE_VERSION}.tgz" >> ${GITHUB_ENV}

        '
    - continue-on-error: true
      name: Publish Nessie Helm chart to Helm Repo
      run: 'wget https://raw.githubusercontent.com/projectnessie/charts.projectnessie.org/main/index.yaml

        helm repo index . --merge index.yaml --url https://github.com/projectnessie/nessie/releases/download/nessie-${RELEASE_VERSION}

        echo ${{ secrets.CI_REPORTS_TOKEN }} | gh auth login --with-token

        index_sha=$(gh api -X GET /repos/projectnessie/charts.projectnessie.org/contents/index.yaml
        --jq ''.sha'')

        gh api -X PUT /repos/projectnessie/charts.projectnessie.org/contents/index.yaml
        -f message="Publishing Nessie Helm chart ${RELEASE_VERSION}" -f content=$(base64
        -w0 index.yaml) -f sha=${index_sha} || true


        echo "## Successfully published Helm chart for ${RELEASE_VERSION}" >> $GITHUB_STEP_SUMMARY

        '
    - continue-on-error: true
      name: Prepare Nessie release for GitHub
      run: "DIR=$(mktemp -d)\nNOTES_FILE=${DIR}/release-notes.md\nLAST_TAG=$(git describe\
        \ --abbrev=0 --tags --match=nessie-* ${GIT_TAG}^1)\nNUM_COMMITS=$(git log\
        \ --format='format:%h' ${LAST_TAG}..HEAD^1 | wc -l)\n\ngit log --perl-regexp\
        \ --author '^(?!.*renovate|.*nessie-release-workflow).*$' --format='format:*\
        \ %s' ${LAST_TAG}..${GIT_TAG} | grep -v '^\\* \\[release\\] .*$' > ${DIR}/release-log\n\
        \nQ_GC_TOOL_URL=\"https://github.com/projectnessie/nessie/releases/download/nessie-${RELEASE_VERSION}/nessie-gc-${RELEASE_VERSION}.jar\"\
        \nQ_UBER_URL=\"https://github.com/projectnessie/nessie/releases/download/nessie-${RELEASE_VERSION}/nessie-quarkus-${RELEASE_VERSION}-runner.jar\"\
        \nQ_HELM_CHART_URL=\"https://github.com/projectnessie/nessie/releases/download/nessie-${RELEASE_VERSION}/nessie-helm-${RELEASE_VERSION}.tgz\"\
        \nQ_MC_URL=\"https://search.maven.org/search?q=g:org.projectnessie+AND+a:nessie-quarkus+AND+v:${RELEASE_VERSION}\"\
        \n\ncat <<EOF > ${NOTES_FILE}\n# Nessie ${RELEASE_VERSION} release\n\n* ${NUM_COMMITS}\
        \ commits since ${LAST_TAG#nessie-}\n* Maven Central: https://search.maven.org/search?q=g:org.projectnessie.nessie+v:${RELEASE_VERSION}\n\
        * Docker images: https://github.com/projectnessie/nessie/pkgs/container/nessie\
        \ and https://quay.io/repository/projectnessie/nessie?tab=tags\n  It is a\
        \ multiplatform Java image (amd64, arm64, ppc64le, s390x): \\`docker pull\
        \ ghcr.io/projectnessie/nessie:${RELEASE_VERSION}-java\\`\n* PyPI: https://pypi.org/project/pynessie/\
        \ (See [pynessie](https://github.com/projectnessie/pynessie/releases))\n*\
        \ Helm Chart repo: https://charts.projectnessie.org/\n\n## Try it\n\nThe attached\
        \ [\\`nessie-quarkus-${RELEASE_VERSION}-runner.jar\\`](${Q_UBER_URL}) is a\
        \ standalone uber-jar file that runs on Java 17 or newer and it is also available\
        \ via [Maven Central](${Q_MC_URL}). Download and run it (requires Java 17):\n\
        \\`\\`\\`\nwget ${Q_UBER_URL}\njava -jar nessie-quarkus-${RELEASE_VERSION}-runner.jar\n\
        \\`\\`\\`\n\nNessie GC tool is attached as [\\`nessie-gc-${RELEASE_VERSION}.jar\\\
        `](${Q_GC_TOOL_URL}), which is a standalone uber-jar file that runs on Java\
        \ 11 or newer. Shell completion can be generated from the tool, check its\
        \ \\`help\\` command. Nessie GC tool is also available as a Docker image:\
        \ \\`docker run --rm ghcr.io/projectnessie/nessie-gc:${RELEASE_VERSION} --help\\\
        `.\n\nThe attached [\\`nessie-helm-${RELEASE_VERSION}.tgz\\`](${Q_HELM_CHART_URL})\
        \ is a packaged Helm chart, which can be downloaded and installed via Helm.\
        \ There is also the [Nessie Helm chart repo](https://charts.projectnessie.org/),\
        \ which can be added and used to install the Nessie Helm chart.\n\n## Changelog\n\
        \n$(./gradlew --quiet --console=plain getChangelog --no-header --no-links)\n\
        \n## Full Changelog (minus renovate commits):\n\n$(cat ${DIR}/release-log)\n\
        EOF\n\necho \"NOTES_FILE=${NOTES_FILE}\" >> ${GITHUB_ENV}\n\ncat \"${NOTES_FILE}\"\
        \ >> $GITHUB_STEP_SUMMARY\n"
    - continue-on-error: true
      name: Create Nessie release in GitHub
      run: "echo ${{ secrets.GITHUB_TOKEN }} | gh auth login --with-token\ngh release\
        \ create ${GIT_TAG} \\\n  --notes-file ${{ env.NOTES_FILE }} \\\n  --title\
        \ \"Nessie ${RELEASE_VERSION}\" \\\n  \"${QUARKUS_UBER_JAR}\" \\\n  \"${CLI_UBER_JAR}\"\
        \ \\\n  \"${GC_UBER_JAR}\" \\\n  \"${NESSIE_OPENAPI}\" \\\n  \"${NESSIE_HELM_CHART}\"\
        \n"
    - continue-on-error: true
      env:
        SWAGGERHUB_API_KEY: ${{ secrets.SWAGGERHUB_API_KEY }}
        SWAGGERHUB_URL: https://api.swaggerhub.com
        XDG_CONFIG_HOME: /tmp
      name: Update SwaggerHub
      uses: smartbear/swaggerhub-cli@v0.9.0
      with:
        args: api:create projectnessie/nessie -f ${{ env.NESSIE_OPENAPI }} --published=publish
          --setdefault --visibility=public
    - continue-on-error: true
      name: SwaggerHub info
      run: echo "## Successfully updated SwaggerHub for ${RELEASE_VERSION}" >> $GITHUB_STEP_SUMMARY
    timeout-minutes: 60
name: Publish release
on:
  repository_dispatch:
    types: trigger-ga___release-publish.yml
